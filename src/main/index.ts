import { app, BrowserWindow } from 'electron'

import { createTray } from './tray'

import './ipc'
import './store'
import { createShortcuts } from './shortcuts'
import { updateElectronApp } from 'update-electron-app'

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string

if (require('electron-squirrel-startup')) {
  app.quit()
}

updateElectronApp()

const createWindow = (): void => {
  // Create the browser window.
  const mainWindow = new BrowserWindow({
    width: 900,
    height: 670,
    minWidth: 900,
    minHeight: 670,
    autoHideMenuBar: true,
    backgroundColor: '#17141f',
    titleBarStyle: process.platform !== 'darwin' ? 'hidden' : 'hiddenInset',
    titleBarOverlay:
      process.platform !== 'darwin'
        ? {
            color: '#00000000',
            height: 32,
            symbolColor: '#a3a0ac',
          }
        : {},
    trafficLightPosition: {
      x: 20,
      y: 20,
    },
    ...(process.platform !== 'darwin' ? { icon: '../resources/icon.png' } : {}),
    webPreferences: {
      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
      contextIsolation: true,
      sandbox: false,
    },
  })

  createTray(mainWindow)
  createShortcuts(mainWindow)

  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY)

  mainWindow.on('close', (event) => {
    event.preventDefault()
    mainWindow.hide()
  })

  mainWindow.on('show', () => {
    if (app.dock) {
      app.dock.show()
    }

    mainWindow.setSkipTaskbar(false)
  })

  mainWindow.on('hide', () => {
    if (app.dock) {
      app.dock.hide()
    }

    mainWindow.setSkipTaskbar(true)
  })
}

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on('ready', createWindow)

// Quit when all windows are closed, except on macOS. There, it's common
// for applications and their menu bar to stay active until the user quits
// explicitly with Cmd + Q.
app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit()
  }
})

app.on('activate', () => {
  // On OS X it's common to re-create a window in the app when the
  // dock icon is clicked and there are no other windows open.
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow()
  }
})

app.on('before-quit', () => {
  const windows = BrowserWindow.getAllWindows()
  windows.forEach((window) => window.destroy())
})

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and import them here.
